trigger:
  branches:
    include: [ main ]

pr:
  branches:
    include: [ main ]

variables:
  buildConfiguration: 'Release'
  azureServiceConnection: 'Project-1 Service Connection'   # keep quotes (spaces)
  appNameDev: 'mywebapp-dev'
  appNameStg: 'mywebapp-stg'
  appNamePrd: 'mywebapp-prd'
  artifactName: 'drop'

stages:
# =========================
# CI: Build • Test • Package
# =========================
- stage: CI_Build
  displayName: 'CI • Build, Test, Package'
  jobs:
  - job: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET SDK 8.x'
      inputs:
        packageType: 'sdk'
        version: '8.x'

    - task: DotNetCoreCLI@2
      displayName: 'Restore (solution)'
      inputs:
        command: 'restore'
        projects: 'DotNetWebApp.sln'

    - task: DotNetCoreCLI@2
      displayName: 'Build (solution)'
      inputs:
        command: 'build'
        projects: 'DotNetWebApp.sln'
        arguments: '--configuration $(buildConfiguration) --no-restore'

    - task: DotNetCoreCLI@2
      displayName: 'Test (*Tests.csproj)'
      inputs:
        command: 'test'
        projects: '**/*Tests.csproj'
        arguments: '--configuration $(buildConfiguration) --no-build --collect "XPlat Code Coverage"'
        publishTestResults: true

    - task: DotNetCoreCLI@2
      displayName: 'Publish web project(s)'
      inputs:
        command: 'publish'
        publishWebProjects: true
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/web'
        zipAfterPublish: false

    - task: ArchiveFiles@2
      displayName: 'Create deployment ZIP'
      inputs:
        rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/web'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(artifactName).zip'
        replaceExistingArchive: true

    - task: PublishBuildArtifacts@1
      displayName: 'Publish artifact'
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)/$(artifactName).zip'
        artifactName: '$(artifactName)'
        publishLocation: 'Container'

# =========================
# CD: DEV
# =========================
- stage: Deploy_Dev
  displayName: 'CD • Deploy to DEV'
  dependsOn: CI_Build
  condition: succeeded()
  jobs:
  - deployment: DeployWebToDev
    environment: 'dev'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@2
            displayName: 'Download CI artifact (current run)'
            inputs:
              buildType: 'current'
              artifact: '$(artifactName)'
              targetPath: '$(Pipeline.Workspace)/$(artifactName)'

          - task: AzureWebApp@1
            displayName: 'Deploy to DEV App Service'
            inputs:
              azureSubscription: '$(azureServiceConnection)'
              appType: 'webApp'
              appName: '$(appNameDev)'
              package: '$(Pipeline.Workspace)/$(artifactName)/$(artifactName).zip'

# =========================
# CD: STG
# =========================
- stage: Deploy_Stg
  displayName: 'CD • Deploy to STG'
  dependsOn: Deploy_Dev
  condition: succeeded()
  jobs:
  - deployment: DeployWebToStg
    environment: 'stg'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@2
            displayName: 'Download CI artifact (current run)'
            inputs:
              buildType: 'current'
              artifact: '$(artifactName)'
              targetPath: '$(Pipeline.Workspace)/$(artifactName)'

          - task: AzureWebApp@1
            displayName: 'Deploy to STG App Service'
            inputs:
              azureSubscription: '$(azureServiceConnection)'
              appType: 'webApp'
              appName: '$(appNameStg)'
              package: '$(Pipeline.Workspace)/$(artifactName)/$(artifactName).zip'

# =========================
# CD: PRD
# =========================
- stage: Deploy_Prd
  displayName: 'CD • Deploy to PRD'
  dependsOn: Deploy_Stg
  condition: succeeded()
  jobs:
  - deployment: DeployWebToPrd
    environment: 'prd'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@2
            displayName: 'Download CI artifact (current run)'
            inputs:
              buildType: 'current'
              artifact: '$(artifactName)'
              targetPath: '$(Pipeline.Workspace)/$(artifactName)'

          - task: AzureWebApp@1
            displayName: 'Deploy to PRD App Service'
            inputs:
              azureSubscription: '$(azureServiceConnection)'
              appType: 'webApp'
              appName: '$(appNamePrd)'
              package: '$(Pipeline.Workspace)/$(artifactName)/$(artifactName).zip'